---
description: Setup and requirements for WAVS projects
globs: 
alwaysApply: false
---
---
description: Setup and requirements for WAVS projects
globs: **/*
alwaysApply: true
---
# Project Structure Guidelines

Guidelines for organizing WAVS projects and understanding the repository layout.

## Directory Structure

```
project-root/
├── .cursor/
│   └── rules/              # Project-specific coding rules
│       ├── component-structure.mdc
│       ├── data-encoding.mdc
│       └── project-setup.mdc
├── .docker/                # Docker configuration and deployment files
│   ├── service.json       # Service configuration
│   ├── deployments.json   # Contract deployment addresses
│   └── script_deploy.json # Script deployment data
├── components/            # WASI component implementations
│   └── eth-price-oracle/  # Example component
│       ├── Cargo.toml    # Rust dependencies
│       └── src/
│           ├── lib.rs     # Component implementation
│           ├── trigger.rs # Trigger event handling
│           └── bindings/  # Generated WASI bindings
├── src/
│   ├── contracts/        # Solidity smart contracts
│   │   ├── WavsTrigger.sol   # Trigger contract
│   │   └── WavsSubmit.sol    # Submission contract
│   └── interfaces/       # Contract interfaces
│       └── ITypes.sol    # Shared type definitions
├── script/              # Deployment and test scripts
│   ├── build_components.sh  # WASI build script
│   └── Trigger.s.sol       # Trigger deployment script
├── compiled/            # Compiled WASM components
├── README.md           # Project overview and setup instructions
├── Cargo.toml          # Workspace-level Rust dependencies
├── Makefile           # Build and deployment commands
└── wavs.toml         # WAVS service configuration

```

[Rest of the file content remains the same...]