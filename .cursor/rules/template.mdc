---
description: Overview and customization guide for the WAVS Foundry template structure and configuration

alwaysApply: true
---
# WAVS Foundry Template Overview

This guide explains the structure and configuration of the WAVS Foundry template to help customize and build your own WAVS service.

1. **Template Structure**

The main files and directories in the WAVS template:

```bash
wavs-foundry-template/
├── README.md               # Tutorial commands
├── makefile                # Build and deploy commands, variables, configs
├── components/             # WASI components
│   └── evm-price-oracle/
│       ├── src/
│       │   ├── lib.rs         # Main component logic
│       │   ├── trigger.rs     # Trigger handling
│       │   └── bindings.rs    # Auto-generated bindings (`make build`)
│       └── Cargo.toml      # Component dependencies
├── compiled/               # Compiled WASM files (`make build`)
├── src/
│   ├── contracts/          # Trigger and submission Solidity contracts
│   └── interfaces/         # Solidity interfaces
├── script/                 # Deployment and interaction scripts
├── wavs.toml               # WAVS service configuration
├── docs/                   # Documentation
└── .env                    # Private environment variables
```

- Use `make wasi-build` to generate bindings and compile components.
- Copy `.env` from `.env.example` to set private environment variables.

2. **TOML Configuration Files**

- `wavs.toml`: Configures the WAVS service (chains, environments, etc.).
- Root `Cargo.toml`: Workspace configuration, dependencies, build settings, metadata.
- `components/*/Cargo.toml`: Component-specific Rust configuration; can inherit from root via `workspace = true`.

Example component `Cargo.toml`:

```toml
[package]
name = "evm-price-oracle"
edition.workspace = true
version.workspace = true
authors.workspace = true
rust-version.workspace = true
repository.workspace = true

[dependencies]
wit-bindgen-rt = { workspace = true }
wavs-wasi-utils = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
alloy-sol-macro = { workspace = true }
wstd = { workspace = true }
alloy-sol-types = { workspace = true }
anyhow = { workspace = true }

[lib]
crate-type = ["cdylib"]

[profile.release]
codegen-units = 1
opt-level = "s"
debug = false
strip = true
lto = true

[package.metadata.component]
package = "component:evm-price-oracle"
target = "wavs:worker/layer-trigger-world@0.4.0-beta.4"
```

3. **wavs.toml Configuration**

The `wavs.toml` file configures:

- Default general settings (shared by all processes)
- WAVS server-specific settings
- CLI-specific settings
- Aggregator-specific settings

4. **Environment Variable Overrides**

Override config values using environment variables:

- WAVS server settings: `WAVS_<UPPERCASE_KEY>`
- CLI settings: `WAVS_CLI_<UPPERCASE_KEY>`
- Aggregator settings: `WAVS_AGGREGATOR_<UPPERCASE_KEY>`

---

For more information:
- [WAVS Foundry Template GitHub](https://github.com/Lay3rLabs/wavs-foundry-template)
- [Oracle Component Tutorial](https://docs.wavs.xyz/tutorial/1-overview)
- [WAVS Design Considerations](https://docs.wavs.xyz/design)
- [wavs.toml Configuration](https://github.com/Lay3rLabs/wavs-foundry-template/blob/main/wavs.toml)
