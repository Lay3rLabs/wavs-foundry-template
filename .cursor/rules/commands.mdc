---
description: Overview of Makefile commands for WAVS development CLI

alwaysApply: true
---
# Makefile Commands for WAVS Development

Use `make help` to list all available commands for building, testing, deploying, and managing WAVS projects.

1. Run `make help` to see all commands:
```bash
make help
```

2. Common commands and their purposes:
```bash
build                     building the project
wasi-build                building WAVS wasi components | WASI_BUILD_DIR
wasi-exec                 executing the WAVS wasi component(s) with ABI function | COMPONENT_FILENAME, INPUT_DATA
wasi-exec-fixed           same as wasi-exec but uses fixed byte input (for Go & TS components) | COMPONENT_FILENAME, INPUT_DATA
clean                     cleaning the project files
clean-docker              remove unused docker containers
validate-component        validate a WAVS component against best practices
fmt                       format Solidity and Rust code
test                      run tests
setup                     install initial dependencies
start-all-local           start anvil and core services (e.g., IPFS)
get-trigger-from-deploy   get trigger address from deployment script
get-submit-from-deploy    get submit address from deployment script
wavs-cli                  run wavs-cli in docker
upload-component          upload WAVS component | COMPONENT_FILENAME, WAVS_ENDPOINT
deploy-service            deploy WAVS component service JSON | SERVICE_URL, CREDENTIAL, WAVS_ENDPOINT
get-trigger               get trigger id | SERVICE_TRIGGER_ADDR, RPC_URL
show-result               show result | SERVICE_SUBMISSION_ADDR, TRIGGER_ID, RPC_URL
upload-to-ipfs            upload service config to IPFS | SERVICE_FILE, [PINATA_API_KEY]
update-submodules         update git submodules
check-requirements        verify system requirements are installed
```

3. Use the commands with appropriate environment variables or arguments as indicated.

4. Best practice: Use `validate-component` before deployment to ensure compliance with WAVS standards.

For more information:
- [WAVS tutorial](https://docs.wavs.dev/tutorial/1-overview)
